#!/bin/csh -f
#
# setarch
#
# Script to modify Emerald-related environment variables and user's
# search path to reflect the specified architecture or the default
# architecture if none is specified.
#
# The default output of this script is to be executed by the C-shell or
# close relative.  Use the following to hide the need for an explicit eval:
#   alias emarch 'eval `$(EMERALDARCH)/bin/setarch \!*`'
#
# Usage (assuming the above alias:)
#   emarch [-q] [-s] [architecture]
#
#   -q  --  emarch will not display informational messages
#   -s  --  emarch output will be in sh format
#
# This script and setuser are closely related and any modifications
# should be made to both in parallel.
#
# ToDo:
# - would be better if the modified emerald directories were inserted
#   at the same place in the search path as any old ones were, rather
#   than simply prepending them
# 

if (! $?EMERALDROOT) then
    echo "echo Must setenv EMERALDROOT first.;"
    exit 1
endif

# parse options
while (.$1 =~ .-*)
    if (.$1 == .-q) then
        set quiet
    else if (.$1 == .-s) then
        set shformat
    else
	echo "echo Unknown option $1 ignored;"
    endif
    shift
end

if ($#argv >= 1) then
    set arch = $1
else
    set arch = `arch`
endif

if (.$arch == .) then
    echo "echo Cannot disable architecture-specific stuff.;"
    exit 1
else if (! -r $EMERALDROOT/bin/$arch) then
    echo "echo Architecture $arch does not exist.;"
    exit 1
else
    if (! $?shformat) then
      echo "setenv EMERALDARCH $arch;"
    else
      echo "EMERALDARCH=$arch;"
      echo "export EMERALDARCH;"
    endif
    set archpath = $EMERALDROOT/bin/$arch
endif

if ($?EMERALDUSER) then
    set userpath = $EMERALDROOT/bin/$EMERALDUSER
else
    set userpath = 
endif

# generate a new search path to look in directories appropriate for the
# specified architecture.  first, remove all references to paths in
# $EMERALDROOT from the existing path
if (! $?shformat) then
    set newpath = `echo $path|tr " " "\012"|grep -v $EMERALDROOT|tr "\012" " "`
else
    set newpath = `echo $PATH|tr ":" "\012"|grep -v $EMERALDROOT|tr "\012" " "`
endif

# now, prepend the appropriate paths to the remainder of the existing path
set newpath = ( $userpath $archpath $EMERALDROOT/bin $newpath )

if (! $?shformat) then
    echo "set path = ( $newpath );"
else
    set newpath = `echo $newpath | tr " " ":"`
    echo "PATH=$newpath;"
    echo "export PATH;"
endif

if (! $?quiet) then
    echo "echo Emerald architecture is now $arch;"
endif

exit 0

