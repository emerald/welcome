#!/bin/csh -f
#
# Generate the tables and lists that drive the new ccalls mechanism

set allfiles = `cd $EMERALDROOT/ccalls ; emmake doths |& egrep -v 'Entering|Leaving'`
set selectedfiles = `echo $* | sed -e 's/\.o/.h/g'`
set ncctabc = cctab.c
set ncctabh = cctab.h
@ moduleindex = 0

cp /dev/null $ncctabc
cp /dev/null $ncctabh

cat << THEEND >> $ncctabh
/*
 * $ncctabh
 *
 * THIS FILE IS AUTOMATICALLY GENERATED.  DO NOT EDIT.
 */

#ifndef _EMERALD_CCALLTAB_H
#define _EMERALD_CCALLTAB_H 1

typedef int (*ccallFunction)(void);

typedef struct CCallDescriptor {
  ccallFunction ccFunction;
  char* ccName;
  char* ccArgTemplate;
} CCallDescriptor;

extern CCallDescriptor *ccalltable[];
THEEND

cat << THEEND >> $ncctabc
/*
 * $ncctabc
 *
 * THIS FILE IS AUTOMATICALLY GENERATED.  DO NOT EDIT.
 */

#define E_NEEDS_STDIO_ONLY
#include "system.h"
#include "assert.h"
#include "$ncctabh"

THEEND
foreach file ($allfiles)
  set absfile = $EMERALDROOT/ccalls/$file
  set modulename = `echo $file:r | tr a-z A-Z`
  set selected = 0
  foreach i ($selectedfiles) 
    if ($i == $file) set selected = 1
  end
  if ($selected) then
    echo Generating $modulename
  else
    echo Skipping $modulename
    continue
  endif
  echo >> $ncctabc "CCallDescriptor ${modulename}_table[] = { "
  echo >> $ncctabh "#define ${modulename} $moduleindex"
  set ccs = `grep '^CCALL' $absfile | sed -e 's/CCALL *( *//' -e 's/,/ /g' -e 's/)//' -e 's/"//g' -e 's/;//' -e 's/\015//'`
  @ i = 1
  @ functionindex = 0
  if ($#ccs == 0) then
    echo >> $ncctabc \ \ \{ \(ccallFunction\) notselected, \"\", \"\" \},
  else
    while ($i < $#ccs)
      set functionname = $ccs[$i]
      @ i ++
      set ccallname = $ccs[$i]
      @ i ++
      set ccallstring = $ccs[$i]
      @ i ++
      if ($selected) then
	echo >> $ncctabc \ \ \{ \(ccallFunction\) $functionname, \"$ccallname\", \"$ccallstring\" \},
	echo >> $ncctabh "extern int $functionname(void);"
      else
	echo >> $ncctabc \ \ \{ \(ccallFunction\) notselected, \"$ccallname\", \"$ccallstring\" \},
      endif
      echo >> $ncctabh "#define ${ccallname} $functionindex"
      @ functionindex ++
    end
  endif
  echo >> $ncctabc "};"
  @ moduleindex ++
end

echo >> $ncctabc "CCallDescriptor *ccalltable[] = {"
foreach absfile ($allfiles)
  set file = $absfile:t
  set selected = 0
  foreach i ($selectedfiles) 
    if ($i == $file) set selected = 1
  end
  if ($selected) then
    set modulename = `echo $file:r | tr a-z A-Z`
    echo >> $ncctabc "  ${modulename}_table,"
  else
    echo >> $ncctabc "  0,"
  endif
end
echo >> $ncctabc "};"
echo >> $ncctabh "#endif"
